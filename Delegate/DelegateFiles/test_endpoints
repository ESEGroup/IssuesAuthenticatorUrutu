#Fill in the blanks in the json data with the needed info
#Every input must be formatted in JSON and every request that requires authentication must have the issued token at the request BODY.

# Gather new token
curl -X POST -H 'Content-Type: application/json' -d "{'login': '', 'senha': ''}" localhost:8080/delegate/token
# Expected output:
# Sucess: {'token': token.decode('ascii')}
# Error: {'e': 'Error generating token.'}


#Verify token status
curl -X GET -H 'Content-Type: application/json' -d '{"token":""}' localhost:8080/delegate/verify_token
# Expected output:
# Sucess: {'user_id': '', username: ''}
# Error: {'e': 'Token expired.'}
# Error: {'e': 'Token does not match any user.'}

# Log user presence when they enter a lab
# WARNING: 'chegada' stands for a boolean where 1=>user arriving,  0=> user leaving. Making multiple requets of the same kind in a row will generate database inconsistensy. Make sure you only issue the right kind by checking user presence.
curl -X POST -H 'Content-Type: application/json' -d "{'token':'','lab_id':'','chegada':''}" localhost:8080/delegate/log_presence
# Expected output:
# Sucess: {'e': 'Presence logged successfully.'}
# Error: {'e': 'Error logging presence.'}

# Check if user is present
curl -X POST -H 'Content-Type: application/json' -d "{'token':''}" localhost:8080/delegate/check_presence

# Check user presence history
curl -X POST -H 'Content-Type: application/json' -d "{'token':''}" localhost:8080/delegate/presence_history
# Expected output:
# Sucess: {'history': ''}
# Error: {'e': 'No history found for given user.'}

# Check user lab preferences
curl -X POST -H 'Content-Type: application/json' -d '{"token":""}' localhost:8080/delegate/check_preferences
# Expected output:
# Sucess: {'preferences': ''}
# Error: {'e': 'Error checking preferences.'}

# Update user lab preferences
curl -X POST -H 'Content-Type: application/json' -d '{"token":"",'preferences':{'lab_id': ,'temperature': ,'umidade': ,'iluminacao': }}' localhost:8080/delegate/update_preferences
# Expected output:
# Sucess: {'e': 'Preferences updated successfully'}
# Error: {'e': 'Error updating preferences.'}
